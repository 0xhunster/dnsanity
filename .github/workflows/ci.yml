name: CI

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        go-version: [ "1.18", "1.19", "1.20", "1.21" ]
    steps:
      # 1) Checkout
      - name: Checkout code
        uses: actions/checkout@v3

      # 2) Setup Go
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      # 3) Cache dependencies (mod cache)
      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

      # 4) Install dependencies
      - name: Go mod tidy
        run: go mod tidy

      # 5) Build
      - name: Build
        run: go build -v ./...

      # 6) Test (unit + integration)
      - name: Test with coverage
        run: go test -v -race -coverprofile=coverage.out ./...

      # # 7) Analyze coverage
      # - name: Coverage info
      #   run: go tool cover -func=coverage.out

      # 8) Upload coverage to Codecov
      # - name: Upload coverage
      #   uses: codecov/codecov-action@v3
      #   with:
      #     file: coverage.out
      #     flags: unittests
      #     token: ${{ secrets.CODECOV_TOKEN }}
